# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-13 22:23
from __future__ import unicode_literals

import astorcore.utils
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('first_published_date', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('editable', models.BooleanField(default=True, editable=False)),
                ('live', models.BooleanField(default=False, editable=False)),
                ('has_unpublished_changes', models.BooleanField(default=False, editable=False)),
                ('latest_changes_date', models.DateTimeField(editable=False, null=True)),
                ('comments_on', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PageVisit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('request_method', models.CharField(blank=True, max_length=16, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContentPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='astorcore.Page')),
                ('title', models.CharField(max_length=255)),
                ('abstract', models.TextField(blank=True, default='')),
                ('img_url', models.CharField(blank=True, max_length=1024)),
                ('body', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('astorcore.page',),
        ),
        migrations.CreateModel(
            name='HTMLUploadPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='astorcore.Page')),
                ('title', models.CharField(max_length=255)),
                ('abstract', models.TextField(blank=True, default='')),
                ('img_url', models.CharField(blank=True, max_length=1024)),
                ('file', models.FileField(upload_to=astorcore.utils.user_directory_path)),
            ],
            options={
                'abstract': False,
            },
            bases=('astorcore.page',),
        ),
        migrations.AddField(
            model_name='pagevisit',
            name='page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visits', to='astorcore.Page'),
        ),
        migrations.AddField(
            model_name='pagevisit',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='page',
            name='content_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pages', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='page',
            name='published_page',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='base_page', to='astorcore.Page'),
        ),
        migrations.AddField(
            model_name='page',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='page',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='astorcore.Page'),
        ),
        migrations.AddField(
            model_name='comment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='astorcore.Comment'),
        ),
        migrations.AlterUniqueTogether(
            name='pagevisit',
            unique_together=set([('page', 'ip_address')]),
        ),
    ]
